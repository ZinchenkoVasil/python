#Студент: Зинченко Василий

"""
== Лото ==
Правила игры в лото.
Игра ведется с помощью специальных карточек, на которых отмечены числа,
и фишек (бочонков) с цифрами.
Количество бочонков — 90 штук (с цифрами от 1 до 90).
Каждая карточка содержит 3 строки по 9 клеток. В каждой строке по 5 случайных цифр,
расположенных по возрастанию. Все цифры в карточке уникальны. Пример карточки:
--------------------------
    9 43 62          74 90
 2    27    75 78    82
   41 56 63     76      86
--------------------------
В игре 2 игрока: пользователь и компьютер. Каждому в начале выдается
случайная карточка.
Каждый ход выбирается один случайный бочонок и выводится на экран.
Также выводятся карточка игрока и карточка компьютера.
Пользователю предлагается зачеркнуть цифру на карточке или продолжить.
Если игрок выбрал "зачеркнуть":
	Если цифра есть на карточке - она зачеркивается и игра продолжается.
	Если цифры на карточке нет - игрок проигрывает и игра завершается.
Если игрок выбрал "продолжить":
	Если цифра есть на карточке - игрок проигрывает и игра завершается.
	Если цифры на карточке нет - игра продолжается.

Побеждает тот, кто первый закроет все числа на своей карточке.
Пример одного хода:
Новый бочонок: 70 (осталось 76)
------ Ваша карточка -----
 6  7          49    57 58
   14 26     -    78    85
23 33    38    48    71
--------------------------
-- Карточка компьютера ---
 7 11     - 14    87
      16 49    55 77    88
   15 20     -       76  -
--------------------------
Зачеркнуть цифру? (y/n)
Подсказка: каждый следующий случайный бочонок из мешка удобно получать
с помощью функции-генератора.
Подсказка: для работы с псевдослучайными числами удобно использовать
модуль random: http://docs.python.org/3/library/random.html
"""
import random

class Card:
    def __init__(self): #сгенирировать случайную карточку
        self.count_number_find = 0
        self.card = [[], [], []]
        for i in range(3):
            buf = []
            while len(buf) < 5:
                r = random.randint(1, 90)
                if not(r in self.card or r in buf):
                    buf.append(r)
            buf.sort()
            self.card[i] = buf

    def show_card(self):
        for y in range(3):
            for x in range(5):
                print(self.card[y][x], end = ' ')
            print('\n')

    def search(self, number): #поск числа в карточке
        for i in range(3):
            if number in self.card[i]:
                self.count_number_find += 1
                return True
            else:
                return False

user_card = Card()
computer_card = Card()
user_won = True
barrels = []
while True:
    while True:
        b = random.randint(1, 90)
        if not (b in barrels):
            barrels.append(b)
            break

    print("Новый бочонок: ", b)
    print("в мешке осталось: ", 90 - len(barrels), "бочонков")
    if len(barrels) == 90:
        break
    print('------ Ваша карточка -----')
    user_card.show_card()
    print('--------------------------')
    print('-- Карточка компьютера ---')
    computer_card.show_card()
    print('--------------------------')
    computer_card.search(b)
    Find = user_card.search(b)
#    print("RESULT: ", Find) #-----------------------------------------------------
    while True:
        answer = input("Зачеркнуть цифру? (y/n) да - [y], нет - [n]: ")
        if answer == 'y':
            user_won = Find
            break
        elif answer == 'n':
            user_won = not Find
            break
        else:
            print("Ответ неверен!")

    if not user_won:
        print("Вы проиграли!")
        break
    else:
        if user_card.count_number_find == 15:
            print("Вы выиграли!")
            break
        elif computer_card.count_number_find == 15:
            print("Компьютер выиграл!")
            break










